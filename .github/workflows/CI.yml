name: CI

on:
  push:
    branches:
      - main
      - master
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64, x86]
        python-version: ['3.9', '3.10', '3.11' ]
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        architecture: x64
    - name: Install libsmb
      run: sudo apt update && sudo apt install -y libsmbclient-dev libsmbclient
    - name: Install maturn
      run: sudo pip install maturin
      #- name: Setup containers
      #  run: docker-compose -f "tests/docker-compose.yml" up -d --build
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        components: rustfmt, clippy
    - name: Build
      run: maturin build --interpreter ${{ matrix.python-version }} --skip-auditwheel
    #- name: Build

    #  uses: actions-rs/cargo@v1
    #    command: build
    #  with:
    #    args: --all-targets
    #- name: Build wheels
    #  uses: PyO3/maturin-action@v1
    #  with:
    #    target: ${{ matrix.target }}
    #   args: --release --out dist --interpreter ${{ matrix.python-version }}
    ##    manylinux: auto
    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: dist


  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [linux, sdist]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing *
